{"version":3,"sources":["redux/contacts/contactsActions.js","Components/contactForm/ContactFormStyled.js","Components/contactForm/ContactForm.js","Components/contactList/contactListItem/ContactListItem.js","Components/contactList/ContactListStyled.js","Components/contactList/ContactList.js","Components/filter/FilterStyled.js","Components/filter/Filter.js","Components/AppStyled.js","Components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["addNewContact","createAction","removeContactById","filteredContacts","ContactFormStyled","styled","div","initialState","name","number","id","ContactForm","onAddNewContact","useState","contact","setContact","onHandleChange","e","target","value","prev","className","onSubmit","preventDefault","uuidv4","type","pattern","title","required","onChange","for","ContactListItem","onClick","ContactsListStyle","ContactList","contacts","filterValue","newArr","filter","toLowerCase","includes","length","map","FilterStyled","connect","dispatch","onFilterInput","query","ContactsFilterAndListWrapper","state","items","useEffect","localStorage","setItem","JSON","stringify","contactsListReducer","createReducer","parse","getItem","payload","some","alert","contactsFilterReducer","_","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.018dbec1.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// import { ADDCONTACT, REMOVECONTACT, FILTER } from \"./contactsTypes\";\r\n\r\n// const addNewContact = (contact) => ({\r\n//   type: ADDCONTACT,\r\n//   payload: contact,\r\n// });\r\n\r\nconst addNewContact = createAction(\"contacts/addContact\");\r\n\r\n// const removeContactById = (id) => ({\r\n//   type: REMOVECONTACT,\r\n//   payload: id,\r\n// });\r\n\r\nconst removeContactById = createAction(\"contacts/removeContact\");\r\n\r\n// const filteredContacts = (query) => ({\r\n//   type: FILTER,\r\n//   payload: query,\r\n// });\r\n\r\nconst filteredContacts = createAction(\"contacts/filteredContacts\");\r\n\r\nexport { addNewContact, removeContactById, filteredContacts };\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactFormStyled = styled.div`\r\n  .login-box {\r\n    margin-top: 20px;\r\n    /* top: 50%; */\r\n    /* left: 50%; */\r\n    width: 400px;\r\n    padding: 40px;\r\n    /* transform: translate(-50%, -50%); */\r\n    background: rgba(0, 0, 0, 0.5);\r\n    box-sizing: border-box;\r\n    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .login-box h2 {\r\n    margin: 0 0 30px;\r\n    padding: 0;\r\n    color: #fff;\r\n    text-align: center;\r\n  }\r\n\r\n  .login-box .user-box {\r\n    position: relative;\r\n  }\r\n\r\n  .login-box .user-box input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n  .login-box .user-box label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n\r\n  .login-box .user-box input:focus ~ label,\r\n  .login-box .user-box input:valid ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: #03e9f4;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .login-box form button {\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    padding: 10px 20px;\r\n    color: #03e9f4;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    margin-top: 40px;\r\n    letter-spacing: 4px;\r\n    border-radius: 5px;\r\n    border-color: #03e9f4;\r\n  }\r\n\r\n  .login-box button:hover {\r\n    background: #03e9f4;\r\n    color: #fff;\r\n    border-radius: 5px solid #03e9f4;\r\n    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { ContactFormStyled } from \"./ContactFormStyled\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  id: \"\",\r\n};\r\n\r\nconst ContactForm = ({ onAddNewContact }) => {\r\n  const [contact, setContact] = useState(initialState);\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handelSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    contact.id = uuidv4();\r\n\r\n    onAddNewContact(contact);\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <ContactFormStyled>\r\n      <div className=\"login-box\">\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={handelSubmitForm}>\r\n          <div className=\"user-box\">\r\n            <input\r\n              id=\"contactName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={onHandleChange}\r\n              value={contact.name}\r\n            />\r\n            <label for=\"contactName\">Name</label>\r\n          </div>\r\n          <div className=\"user-box\">\r\n            <input\r\n              className=\"form-control-material\"\r\n              id=\"contactPhone\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={onHandleChange}\r\n              value={contact.number}\r\n            />\r\n            <label for=\"contactPhone\">Number</label>\r\n          </div>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    </ContactFormStyled>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     onAddNewContact: () => dispatch(addNewContact()),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ contact, removeContactById }) => {\r\n  const remove = () => {\r\n    removeContactById(contact.id);\r\n  };\r\n  return (\r\n    <li>\r\n      <p>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button onClick={remove}>DELETE</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyle = styled.div`\r\n  h2 {\r\n    margin: 10px 0 20px;\r\n    padding: 0;\r\n    color: #fff;\r\n    text-align: center;\r\n  }\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  li {\r\n    color: #c9c9c9;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    list-style: none;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    height: 25px;\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    /* padding: 5px 10px; */\r\n    color: rgba(244, 3, 3, 0.7);\r\n    font-size: 12px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    overflow: hidden;\r\n    transition: 0.5s;\r\n    /* margin-top: 40px; */\r\n    letter-spacing: 4px;\r\n    border-radius: 5px;\r\n    border-color: rgba(244, 3, 3, 0.5);\r\n  }\r\n\r\n  button:hover {\r\n    background: rgba(244, 3, 3, 0.5);\r\n    color: #fff;\r\n    border-radius: 5px solid rgba(244, 3, 3, 0.5);\r\n    box-shadow: 0 0 5px rgba(244, 3, 3, 0.5), 0 0 20px rgba(244, 3, 3, 0.5);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport { ContactsListStyle } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, filterValue, removeContactById }) => {\r\n  const newArr = [...contacts].filter((contact) => {\r\n    return contact.name.toLowerCase().includes(filterValue.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ContactsListStyle>\r\n        <h2>Contacts:</h2>\r\n\r\n        {contacts.length !== 0 ? (\r\n          <>\r\n            {newArr.length !== 0 ? (\r\n              <ul>\r\n                {newArr.map((contact) => (\r\n                  <ContactListItem\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                    removeContactById={removeContactById}\r\n                  />\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>There is no such contact ;(</p>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <p>Please enter your first contact ;)</p>\r\n        )}\r\n      </ContactsListStyle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  .filter-box {\r\n    position: relative;\r\n  }\r\n\r\n  .filter-box input {\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    margin-bottom: 30px;\r\n    border: none;\r\n    border-bottom: 1px solid #fff;\r\n    outline: none;\r\n    background: transparent;\r\n  }\r\n  .filter-box label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    pointer-events: none;\r\n    transition: 0.5s;\r\n  }\r\n  .filter-box input:focus ~ label {\r\n    top: -20px;\r\n    left: 0;\r\n    color: #03e9f4;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filteredContacts } from \"../../redux/contacts/contactsActions\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\n\r\nconst Filter = ({ onFilterInput }) => {\r\n  const onFilterInputChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    onFilterInput(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FilterStyled>\r\n        <div className=\"filter-box\">\r\n          <input id=\"filterInput\" type=\"text\" onChange={onFilterInputChange} />\r\n          <label for=\"filterInput\">Find contacts by name</label>\r\n        </div>\r\n      </FilterStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilterInput: (query) => dispatch(filteredContacts(query)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFilterAndListWrapper = styled.div`\r\n  margin-top: 20px;\r\n  /* top: 50%; */\r\n  /* left: 50%; */\r\n  width: 400px;\r\n  padding: 40px;\r\n  /* transform: translate(-50%, -50%); */\r\n  background: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);\r\n  border-radius: 10px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewContact,\r\n  removeContactById,\r\n} from \"../redux/contacts/contactsActions\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport { ContactsFilterAndListWrapper } from \"./AppStyled\";\r\n\r\nconst App = ({ contacts, filter, onAddNewContact, removeContactById }) => {\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm onAddNewContact={onAddNewContact} />\r\n      <ContactsFilterAndListWrapper>\r\n        {contacts.length !== 0 && <Filter filter={filter} />}\r\n\r\n        <ContactList\r\n          contacts={contacts}\r\n          filterValue={filter}\r\n          removeContactById={removeContactById}\r\n        />\r\n      </ContactsFilterAndListWrapper>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddNewContact: (contact) => dispatch(addNewContact(contact)),\r\n  removeContactById: (id) => dispatch(removeContactById(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContact,\r\n  removeContactById,\r\n  filteredContacts,\r\n} from \"./contactsActions\";\r\n// import { ADDCONTACT, REMOVECONTACT, FILTER } from \"./contactsTypes\";\r\n\r\nconst contactsListReducer = createReducer(\r\n  JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [addNewContact]: (state, { payload }) => {\r\n      if (\r\n        state.some((contact) =>\r\n          contact.name.toLowerCase().includes(payload.name.toLowerCase())\r\n        )\r\n      ) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n        return;\r\n      }\r\n      return [...state, payload];\r\n    },\r\n    [removeContactById]: (state, { payload }) =>\r\n      state.filter((contact) => contact.id !== payload),\r\n  }\r\n);\r\n\r\n// const contactsListReducer = (\r\n//   state = [\r\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//   ],\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case ADDCONTACT:\r\n//       return [...state, payload];\r\n//     case REMOVECONTACT:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [filteredContacts]: (_, { payload }) => payload,\r\n});\r\n\r\n// const contactsFilterReduser = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactsListReducer,\r\n  filter: contactsFilterReducer,\r\n});\r\nexport default contactsReducer;\r\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\n// {\r\n//     contacts: {\r\n//           items: [{}, {}, ...],\r\n//           filter: ''\r\n//   }\r\n// }\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}